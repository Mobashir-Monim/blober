<?php

use Illuminate\Database\Seeder;

class QPSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $vals = json_decode('[{"id":1,"question":"Retrieve the name and average point of each hero.","output":"[{\"name\":\"Black Canary\",\"avg_points\":\"92.0000\"},{\"name\":\"Green Arrow\",\"avg_points\":\"90.0000\"},{\"name\":\"The Flash\",\"avg_points\":\"66.0000\"},{\"name\":\"Wonder Woman\",\"avg_points\":\"99.0000\"}]","difficulty":5,"query":"select name, avg(hero_points) as avg_points from hero_management_battles inner join hero_management_heroes on hero_management_heroes.hero_id = hero_management_battles.hero_id group by name;","points":500,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-06 19:04:40","updated_at":"2020-03-06 19:04:40"},{"id":2,"question":"Retrieve the name of heroes and villains, date and location of battle where the heroes have scored lower than the villains.","output":"[{\"hero_name\":\"The Flash\",\"villian_name\":\"Ares\",\"date\":\"2016-09-10\",\"battle_location\":\"Metropolis\"},{\"hero_name\":\"Green Arrow\",\"villian_name\":\"Deathstroke\",\"date\":\"2018-11-06\",\"battle_location\":\"Star City\"}]","difficulty":7,"query":"select h.name as hero_name, v.name as villian_name, date, battle_location from hero_management_battles inner join hero_management_villains v on v.villain_id = hero_management_battles.villain_id inner join hero_management_heroes h on h.hero_id = hero_management_battles.hero_id where hero_points &lt; villain_points;","points":700,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-06 19:14:23","updated_at":"2020-03-06 19:14:23"},{"id":3,"question":"Retrieve the name of the villains who have fought the same hero more than once.","output":"[{\"name\":\"Deathstroke\"}]","difficulty":10,"query":"select name from hero_management_villains where villain_id in (select villain_id from hero_management_battles group by hero_id, villain_id having count(*) &gt; 1);","points":1000,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-06 19:51:55","updated_at":"2020-03-06 19:51:55"},{"id":4,"question":"Retrieve the name of villains whose location are not the same as their battle location.","output":"[{\"name\":\"Harley Quinn\"},{\"name\":\"Ares\"}]","difficulty":3,"query":"select name from hero_management_villains v where exists (select * from hero_management_battles b where b.battle_location != v.location and b.villain_id = v.villain_id);","points":300,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-06 19:56:14","updated_at":"2020-03-06 19:56:14"},{"id":5,"question":"Show all Details of the students who have scored lower than 30 and the retrieved table should be sorted by score (lower to higher).","output":"[{\"Std_ID\":\"s002\",\"Std_Name\":\"Fred Weasley\",\"Section\":2,\"Project_Title\":\"Joke Shop Management\",\"Score\":26,\"Submission_Date\":\"2017-09-30\"},{\"Std_ID\":\"s004\",\"Std_Name\":\"Mad Eye Moody\",\"Section\":1,\"Project_Title\":\"Crime Reporting System\",\"Score\":28,\"Submission_Date\":\"2017-09-28\"}]","difficulty":3,"query":"select * from hogwarts_db_project_project_info where Score &lt; 30 order by Score;","points":300,"deductible":null,"time":null,"data_pool_id":4,"is_quiz_query":1,"created_at":"2020-03-08 01:50:55","updated_at":"2020-03-08 01:50:55"},{"id":6,"question":"Show all details from table.","output":"[{\"Std_ID\":\"s001\",\"Std_Name\":\"Sirius Black\",\"Section\":2,\"Project_Title\":\"Animagus Registration System\",\"Score\":31,\"Submission_Date\":\"2017-09-20\"},{\"Std_ID\":\"s002\",\"Std_Name\":\"Fred Weasley\",\"Section\":2,\"Project_Title\":\"Joke Shop Management\",\"Score\":26,\"Submission_Date\":\"2017-09-30\"},{\"Std_ID\":\"s003\",\"Std_Name\":\"Hermione Granger\",\"Section\":1,\"Project_Title\":\"Elf Rights Volunteer Management\",\"Score\":35,\"Submission_Date\":\"2017-09-30\"},{\"Std_ID\":\"s004\",\"Std_Name\":\"Mad Eye Moody\",\"Section\":1,\"Project_Title\":\"Crime Reporting System\",\"Score\":28,\"Submission_Date\":\"2017-09-28\"},{\"Std_ID\":\"s005\",\"Std_Name\":\"Dolores Umbridge\",\"Section\":2,\"Project_Title\":\"Pure Blood Registration System\",\"Score\":35,\"Submission_Date\":\"2017-10-01\"}]","difficulty":1,"query":"select * from hogwarts_db_project_project_info;","points":100,"deductible":null,"time":null,"data_pool_id":4,"is_quiz_query":1,"created_at":"2020-03-08 01:52:20","updated_at":"2020-03-08 01:52:20"},{"id":7,"question":"Show name, score and project title of students who have the word \u201cManagement\u201d in their project title.","output":"[{\"Std_Name\":\"Fred Weasley\",\"Score\":26,\"Project_Title\":\"Joke Shop Management\"},{\"Std_Name\":\"Hermione Granger\",\"Score\":35,\"Project_Title\":\"Elf Rights Volunteer Management\"}]","difficulty":3,"query":"select Std_Name, Score, Project_Title from hogwarts_db_project_project_info where Project_Title like \"%Management%\";","points":300,"deductible":null,"time":null,"data_pool_id":4,"is_quiz_query":1,"created_at":"2020-03-08 01:54:45","updated_at":"2020-03-08 01:54:45"},{"id":8,"question":"Show name, score and project title of students who have the word \u201cRegistration\u201d in their project title","output":"[{\"Std_Name\":\"Sirius Black\",\"Score\":31,\"Project_Title\":\"Animagus Registration System\"},{\"Std_Name\":\"Dolores Umbridge\",\"Score\":35,\"Project_Title\":\"Pure Blood Registration System\"}]","difficulty":3,"query":"select Std_Name, Score, Project_Title from hogwarts_db_project_project_info where Project_Title like \"%Registration%\";","points":300,"deductible":null,"time":null,"data_pool_id":4,"is_quiz_query":1,"created_at":"2020-03-08 01:55:22","updated_at":"2020-03-08 01:55:22"},{"id":9,"question":"Retrieve the name of each client and the total amount of products they have bought as Purchase_Amount.","output":"[{\"Cus_name\":\"Andrew Bernard\",\"Purchase_Amount\":750},{\"Cus_name\":\"Dwight Shrute\",\"Purchase_Amount\":800},{\"Cus_name\":\"Jim Harper\",\"Purchase_Amount\":2800},{\"Cus_name\":\"Michael Scott\",\"Purchase_Amount\":3800},{\"Cus_name\":\"Pam Beesly\",\"Purchase_Amount\":3000}]","difficulty":4,"query":"select Cus_name, sum(Quantity * Price) as Purchase_Amount from the_shop_customer inner join the_shop_orders on the_shop_customer.Cus_id = the_shop_orders.Cus_id inner join the_shop_product on the_shop_orders.Product_id = the_shop_product.Product_id group by Cus_name;","points":400,"deductible":null,"time":null,"data_pool_id":1,"is_quiz_query":1,"created_at":"2020-03-08 05:22:14","updated_at":"2020-03-08 05:22:14"},{"id":10,"question":"Retrieve the name of the Customer, Product and order amount as Order_Amount of all Order in 2005.","output":"[{\"Cus_name\":\"Andrew Bernard\",\"Product_name\":\"Mark 3 Razor\",\"Order_Amount\":750},{\"Cus_name\":\"Jim Harper\",\"Product_name\":\"kitkat\",\"Order_Amount\":100},{\"Cus_name\":\"Jim Harper\",\"Product_name\":\"Sunflower oil\",\"Order_Amount\":1200},{\"Cus_name\":\"Michael Scott\",\"Product_name\":\"kitkat\",\"Order_Amount\":500},{\"Cus_name\":\"Michael Scott\",\"Product_name\":\"Sunflower oil\",\"Order_Amount\":2400},{\"Cus_name\":\"Michael Scott\",\"Product_name\":\"Vaseline lotion\",\"Order_Amount\":900}]","difficulty":5,"query":"select Cus_name, Product_name, sum(Quantity * Price) as Order_Amount from the_shop_customer inner join the_shop_orders on the_shop_customer.Cus_id = the_shop_orders.Cus_id inner join the_shop_product on the_shop_orders.Product_id = the_shop_product.Product_id where Order_date &gt;= \"2005-01-01\" and Order_date &lt;= \"2005-12-31\" group by Cus_name, Product_name;","points":500,"deductible":null,"time":null,"data_pool_id":1,"is_quiz_query":1,"created_at":"2020-03-08 05:36:07","updated_at":"2020-03-08 05:36:07"},{"id":11,"question":"Retrieve the name of the customer who was the first member according to membership date","output":"[{\"cus_name\":\"Michael Scott\"}]","difficulty":2,"query":"select cus_name from the_shop_customer where membership_date = (select min(membership_date) from the_shop_customer);","points":200,"deductible":null,"time":null,"data_pool_id":1,"is_quiz_query":1,"created_at":"2020-03-08 05:41:03","updated_at":"2020-03-08 16:37:13"},{"id":12,"question":"Retrieve the names and email of all Customer who have bought products more than twice or who bought more than 1000 TK worth of products in total. Show the Customer\u2019s name (without repetition), the total amount of product they bought and number of times they bought products.","output":"[{\"cus_name\":\"Jim Harper\"},{\"cus_name\":\"Pam Beesly\"},{\"cus_name\":\"Michael Scott\"}]","difficulty":7,"query":"select cus_name from (select cus_id, count(*) as times, sum(quantity * price) as total from the_shop_orders inner join the_shop_product on the_shop_orders.product_id = the_shop_product.product_id group by cus_id) as tm inner join the_shop_customer on tm.cus_id = the_shop_customer.cus_id where tm.times &gt; 3 or tm.total &gt; 1000;","points":700,"deductible":null,"time":null,"data_pool_id":1,"is_quiz_query":1,"created_at":"2020-03-08 16:09:14","updated_at":"2020-03-08 16:09:14"},{"id":13,"question":"Retrieve the name of each client and the total amount of products they have bought as total_purchases.","output":"[{\"name\":\"Attorneys at Law\",\"total_purchases\":\"17000\"},{\"name\":\"Daniel Schofield\",\"total_purchases\":\"20000\"},{\"name\":\"Dunmore High School\",\"total_purchases\":\"8000\"},{\"name\":\"Jan Levinson\",\"total_purchases\":\"10000\"},{\"name\":\"Mr. Deckert\",\"total_purchases\":\"6000\"}]","difficulty":4,"query":"select name, sum(sale_amount) as total_purchases from the_office_sales inner join the_office_client on the_office_sales.client_id = the_office_client.client_id group by name;","points":400,"deductible":null,"time":null,"data_pool_id":2,"is_quiz_query":1,"created_at":"2020-03-08 16:15:23","updated_at":"2020-03-08 16:15:23"},{"id":14,"question":"Retrieve the name of the employee as employee name, client as client name and sales amount of all sales in 2018.","output":"[{\"employee_name\":\"Jim Harper\",\"client_name\":\"Mr. Deckert\",\"sale_amount\":1000},{\"employee_name\":\"Pam Beesly\",\"client_name\":\"Dunmore High School\",\"sale_amount\":8000},{\"employee_name\":\"Dwight Shrute\",\"client_name\":\"Daniel Schofield\",\"sale_amount\":20000},{\"employee_name\":\"Michael Scott\",\"client_name\":\"Jan Levinson\",\"sale_amount\":10000}]","difficulty":4,"query":"select the_office_employee.name as employee_name,the_office_client.name as client_name, sale_amount from the_office_sales inner join the_office_client on the_office_sales.client_id = the_office_client.client_id inner join the_office_employee on the_office_employee.emp_id = the_office_sales.emp_id where year(last_sale) = 2018;","points":400,"deductible":null,"time":null,"data_pool_id":2,"is_quiz_query":1,"created_at":"2020-03-08 16:21:04","updated_at":"2020-03-08 16:21:04"},{"id":15,"question":"Retrieve the name&nbsp; and salary of the employees who get the maximum salary","output":"[{\"name\":\"Michael Scott\",\"salary\":80000}]","difficulty":2,"query":"select name, salary from the_office_employee where salary = (select max(salary) from the_office_employee);","points":200,"deductible":null,"time":null,"data_pool_id":2,"is_quiz_query":1,"created_at":"2020-03-08 16:39:27","updated_at":"2020-03-08 16:39:27"},{"id":16,"question":"Retrieve the names of all clients who have bought products more than twice or who bought more than 10000 TK worth of products in total. Show the client\u2019s name (without repetition), the total amount of product they bought and number of times they bought products.","output":"[{\"name\":\"Mr. Deckert\"},{\"name\":\"Attorneys at Law\"},{\"name\":\"Daniel Schofield\"}]","difficulty":6,"query":"select name from the_office_client inner join (select client_id from (select client_id, sum(sale_amount) as total, count(client_id) as times from the_office_sales group by client_id) as tm where tm.times &gt; 2 or total &gt; 10000) as tm2 on tm2.client_id = the_office_client.client_id;","points":600,"deductible":null,"time":null,"data_pool_id":2,"is_quiz_query":1,"created_at":"2020-03-08 16:45:34","updated_at":"2020-03-08 16:45:34"},{"id":17,"question":"Retrieve the name and average point of each hero.","output":"[{\"name\":\"Black Canary\",\"avg_points\":\"92.0000\"},{\"name\":\"Green Arrow\",\"avg_points\":\"90.0000\"},{\"name\":\"The Flash\",\"avg_points\":\"66.0000\"},{\"name\":\"Wonder Woman\",\"avg_points\":\"99.0000\"}]","difficulty":3,"query":"select name, avg(hero_points) as avg_points from hero_management_battles inner join hero_management_heroes on hero_management_heroes.hero_id = hero_management_battles.hero_id group by name;","points":300,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-08 16:58:09","updated_at":"2020-03-08 16:58:09"},{"id":18,"question":"Retrieve the name of heroes and villains, date and location of battle where the heroes have scored lower than the villains.","output":"[{\"hero\":\"The Flash\",\"villain\":\"Ares\",\"battle_location\":\"Metropolis\",\"date\":\"2016-09-10\"},{\"hero\":\"Green Arrow\",\"villain\":\"Deathstroke\",\"battle_location\":\"Star City\",\"date\":\"2018-11-06\"}]","difficulty":4,"query":"select hero_management_heroes.name as hero, hero_management_villains.name as villain, battle_location, date from hero_management_battles inner join hero_management_heroes on hero_management_battles.hero_id = hero_management_heroes.hero_id inner join hero_management_villains on hero_management_villains.villain_id = hero_management_battles.villain_id where Hero_points &lt; Villain_points;","points":400,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-08 17:02:39","updated_at":"2020-03-08 17:02:39"},{"id":19,"question":"Retrieve the name of the villains who have fought the same hero more than once.","output":"[{\"name\":\"Deathstroke\"}]","difficulty":3,"query":"select name from hero_management_villains where villain_id in (select villain_id from hero_management_battles group by hero_id, villain_id having count(*) &gt; 1);","points":300,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-08 17:07:56","updated_at":"2020-03-08 17:07:56"},{"id":20,"question":"Retrieve the name of villains whose location are not the same as their battle location.","output":"[{\"name\":\"Harley Quinn\"},{\"name\":\"Ares\"}]","difficulty":4,"query":"select name from hero_management_villains where villain_id in (select hero_management_villains.villain_id from hero_management_battles inner join hero_management_villains on hero_management_battles.villain_id = hero_management_villains.villain_id where location != battle_location);","points":400,"deductible":null,"time":null,"data_pool_id":3,"is_quiz_query":1,"created_at":"2020-03-08 17:11:31","updated_at":"2020-03-08 17:11:31"},{"id":21,"question":"List the name, power and strength of heroes who have the world \u201cSpecial\u201d in their special_power.","output":"[{\"hero_name\":\"Thor\",\"special_power\":\"Special Hammer\",\"strength\":88},{\"hero_name\":\"Ironman\",\"special_power\":\"Special Suit\",\"strength\":80}]","difficulty":1,"query":"select hero_name, special_power, strength from marvel_hero_info where special_power like \"%Special%\";","points":100,"deductible":null,"time":null,"data_pool_id":5,"is_quiz_query":1,"created_at":"2020-03-08 17:17:09","updated_at":"2020-03-08 17:17:09"},{"id":22,"question":"List all the dates when there has been a fight. The list should not contain duplicate dates.","output":"[{\"Last_Fight\":\"2017-05-31\"},{\"Last_Fight\":\"2017-06-05\"},{\"Last_Fight\":\"2017-06-06\"},{\"Last_Fight\":\"2017-06-08\"},{\"Last_Fight\":\"2017-09-08\"}]","difficulty":2,"query":"select Last_Fight from marvel_hero_info group by Last_Fight;","points":200,"deductible":null,"time":null,"data_pool_id":5,"is_quiz_query":1,"created_at":"2020-03-08 17:18:27","updated_at":"2020-03-08 17:18:27"},{"id":23,"question":"Show all Details of the heroes who have strength higher than 75 and the retrieved table should be sorted by last fight date (lower to higher).","output":"[{\"Hero_ID\":\"s003\",\"Hero_Name\":\"Hulk\",\"Gender\":\"M\",\"Special_Power\":\"Superhuman Physical Ability\",\"Strength\":98,\"Last_Fight\":\"2017-05-31\"},{\"Hero_ID\":\"s001\",\"Hero_Name\":\"Spider Man\",\"Gender\":\"M\",\"Special_Power\":\"Climbing\",\"Strength\":76,\"Last_Fight\":\"2017-06-05\"},{\"Hero_ID\":\"s004\",\"Hero_Name\":\"Thor\",\"Gender\":\"M\",\"Special_Power\":\"Special Hammer\",\"Strength\":88,\"Last_Fight\":\"2017-06-06\"},{\"Hero_ID\":\"s005\",\"Hero_Name\":\"Captain Marvel\",\"Gender\":\"F\",\"Special_Power\":\"Throwing Energy Bursts\",\"Strength\":85,\"Last_Fight\":\"2017-06-08\"},{\"Hero_ID\":\"s006\",\"Hero_Name\":\"Ironman\",\"Gender\":\"M\",\"Special_Power\":\"Special Suit\",\"Strength\":80,\"Last_Fight\":\"2017-09-08\"}]","difficulty":2,"query":"select * from marvel_hero_info where strength &gt; 75 order by last_fight;","points":200,"deductible":null,"time":null,"data_pool_id":5,"is_quiz_query":1,"created_at":"2020-03-08 17:20:37","updated_at":"2020-03-08 17:20:37"},{"id":24,"question":"List the name, power and strength of heroes who have the world \u201cSuper\u201d in their special_power.","output":"[{\"hero_name\":\"Wonder Woman\",\"special_power\":\"Superhuman Strength\",\"strength\":98},{\"hero_name\":\"Superman\",\"special_power\":\"Superhuman Physical Ability\",\"strength\":96},{\"hero_name\":\"The Flash\",\"special_power\":\"Super Speed\",\"strength\":87}]","difficulty":2,"query":"select hero_name, special_power, strength from justice_league_hero_info where special_power like \"%Super%\";","points":200,"deductible":null,"time":null,"data_pool_id":6,"is_quiz_query":1,"created_at":"2020-03-08 17:22:48","updated_at":"2020-03-08 17:22:48"},{"id":25,"question":"List all the dates when there has been a fight. The list should not contain duplicate dates.","output":"[{\"last_fight\":\"2017-05-31\"},{\"last_fight\":\"2017-06-06\"},{\"last_fight\":\"2017-06-08\"},{\"last_fight\":\"2017-06-10\"},{\"last_fight\":\"2017-09-08\"}]","difficulty":2,"query":"select last_fight from justice_league_hero_info group by last_fight;","points":200,"deductible":null,"time":null,"data_pool_id":6,"is_quiz_query":1,"created_at":"2020-03-08 17:28:59","updated_at":"2020-03-08 17:28:59"},{"id":26,"question":"Show all Details of the heroes who have strength higher than 85 and the retrieved table should be sorted by strength (lower to higher).","output":"[{\"Hero_ID\":\"s001\",\"Hero_Name\":\"Green Lantern\",\"Gender\":\"M\",\"Special_Power\":\"Power Ring\",\"Strength\":90,\"Last_Fight\":\"2017-05-31\"},{\"Hero_ID\":\"s002\",\"Hero_Name\":\"Wonder Woman\",\"Gender\":\"F\",\"Special_Power\":\"Superhuman Strength\",\"Strength\":98,\"Last_Fight\":\"2017-06-10\"},{\"Hero_ID\":\"s003\",\"Hero_Name\":\"Superman\",\"Gender\":\"M\",\"Special_Power\":\"Superhuman Physical Ability\",\"Strength\":96,\"Last_Fight\":\"2017-05-31\"},{\"Hero_ID\":\"s004\",\"Hero_Name\":\"Batman\",\"Gender\":\"M\",\"Special_Power\":\"Technology and martial arts\",\"Strength\":94,\"Last_Fight\":\"2017-06-06\"},{\"Hero_ID\":\"s006\",\"Hero_Name\":\"The Flash\",\"Gender\":\"M\",\"Special_Power\":\"Super Speed\",\"Strength\":87,\"Last_Fight\":\"2017-09-08\"}]","difficulty":2,"query":"select * from justice_league_hero_info where strength &gt; 85;","points":200,"deductible":null,"time":null,"data_pool_id":6,"is_quiz_query":1,"created_at":"2020-03-08 17:30:11","updated_at":"2020-03-08 17:30:11"}]', true);

        foreach ($vals as $val) {
            App\QueryPool::create($val);
        }

        foreach ($vals as $val) {
            $val['id'] += 26;
            $val['is_quiz_query'] = 0;
            App\QueryPool::create($val);
        }
    }
}
